start video 4
https://youtu.be/-Zn_QXN0qtQ?list=PL7Oro2kvkIzK9X9ctS7bK3VVq0zsEYQsR

#1 init project

1.1start spring boot project with start.srping.io or spring initialliz extension
1.2 setting application.property: server.port
    mysql: https://spring.io/guides/gs/accessing-data-mysql/

1.3 config: backend/config: AppConfig.java, JwtContanst.java, JwtValidation.java, jwtProvider.java
	-add jjwt-jackson,jjwt-impl,jjwt-api dependency
#2  createEntity
2-1add User, Category, Address, PaymentInfomation, Product, Rating, Review, Size Model
https://youtu.be/-Zn_QXN0qtQ?list=PL7Oro2kvkIzK9X9ctS7bK3VVq0zsEYQsR&t=4607

https://youtu.be/-Zn_QXN0qtQ?list=PL7Oro2kvkIzK9X9ctS7bK3VVq0zsEYQsR&t=5629

2-2 fix some model(delete @Entity), refactor package: com -> org
    -add Request, response to controll AuthController(handle signup and signin)
    -can signup by postmand with 
    post method: http://localhost:5454/auth/signup
    {"firstName": "test3",
    "lastName": "test3",
    "email": "test3@gmail.com",
    "password": "test@123",
    "phoneNumber":"01012345678"}
	- and sign in {
    "email": "test3@gmail.com",
    "password": "test@123"
	}
tham khảo thêm: https://loda.me/articles/ss-huong-dan-spring-security-jpa-hibernate
https://loda.me/articles/ss-huong-dan-spring-security-jwt-json-web-token-hibernate
end video 4


https://youtu.be/Oe_F0oRdJ2k?list=PL7Oro2kvkIzK9X9ctS7bK3VVq0zsEYQsR&t=4748
#3: implement entity, repository, service, serviceImpl

3.1 Implement Order, OrderItem, PaymentDetail, OrderException,OrderService, OrderServiceImpl, Cart
CartItem, CartService, AddItemRequest, CartServiceImpl, CartItemService, CartItemServiceImpl
implement method: CartItemServiceImpl,
implement method: CartServiceImpl,
https://youtu.be/Oe_F0oRdJ2k?list=PL7Oro2kvkIzK9X9ctS7bK3VVq0zsEYQsR&t=10964

3.2 Implement and custom RatingRepository,ReviewRepository, 
add getter/setter Rating model
RatingRequest,ReviewRequest
ReviewService,ReviewServiceImpl, RatingService, RatingServiceImpl
ProductController

almost end backend: miss some controller
end video 5
3.3: video 4: add cartService in AuthController
fix model column name: camel-> snake
will add the rest of controller and comeback check api by postman in video 6

next to video 11 to do the rest of controller.
https://youtu.be/o2eh5DW4EA8?list=PL7Oro2kvkIzK9X9ctS7bK3VVq0zsEYQsR
3.4: implement AdminOrderController, CartController, OrderController, RatingController, ReviewController, UserController,AdminProductConroller
end video 11

#3.5 end video 6 and do the rest of controller, service,
BE
OrderStatus,PaymentStatus: static constant
CartItemController
@Table(name="`order`") in Order model to fix errror
AddressRepository,OrderItemRepository,OrderRepository
OrderItemServiceImpl, OrderServiceImpl(implement full method)
fix findUserProfileByJwt
FE
change dummmy data varible name corresponding with BE
discountPersent-> discountPercent
topLavel -> topLevel
secondLavel -> secondLevel
thirdLavel -> thirdLevel

check
(FE)
video 7: Integrating Login and Register APIs with JWT
video 8: API Integration for Product Management and Shopping Cart Functionality

(FE+BE)video 9: Integrating Razorpay Payment Gateway in Your Ecommerce Full Stack Project

video 10 - Deploying Your App for Free on the Cloud!
video 12: Building an Admin Panel for Your eCommerce Store: MERN Stack & Spring with React

implement Payment: PaymentController, PaymentLinkResponse